name: Test (backend)

on:
  push:
    branches:
      - beta
      - io
      - host
    paths:
      - packages/backend/**
      # for permissions
      - packages/misskey-js/**
  pull_request:
    paths:
      - packages/backend/**
      # for permissions
      - packages/misskey-js/**

jobs:
  unit:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    services:
      postgres:
        image: postgres:15
        ports:
          - 54312:5432
        env:
          POSTGRES_DB: test-misskey
          POSTGRES_HOST_AUTH_METHOD: trust
      dragonfly:
        image: docker.dragonflydb.io/dragonflydb/dragonfly
        options: --ulimit "memlock=-1"
        env:
          DFLY_version_check: false
          DFLY_tcp_backlog: 2048
          DFLY_cluster_mode: emulated
          DFLY_lock_on_hashtags: true
          DFLY_pipeline_squash: 0
          DFLY_multi_exec_squash: false
          DFLY_conn_io_threads: 4
          DFLY_epoll_file_threads: 4
          DFLY_proactor_threads: 4
        ports:
          - 56312:6379

    steps:
    - uses: actions/checkout@v4.1.1
      with:
        fetch-depth: 0
        submodules: true
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        run_install: false
    - name: Install FFmpeg
      uses: FedericoCarboni/setup-ffmpeg@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4.0.4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
    - run: corepack enable
    - run: pnpm i --frozen-lockfile
    - name: Check pnpm-lock.yaml
      run: git diff --exit-code pnpm-lock.yaml
    - name: Copy Configure
      run: cp .github/misskey/test.yml .config
    - name: Build
      run: pnpm build
    - name: Test
      run: pnpm --filter backend test-and-coverage
    - name: Upload to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./packages/backend/coverage/coverage-final.json

  e2e:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    services:
      postgres:
        image: postgres:15
        ports:
          - 54312:5432
        env:
          POSTGRES_DB: test-misskey
          POSTGRES_HOST_AUTH_METHOD: trust
      dragonfly:
        image: docker.dragonflydb.io/dragonflydb/dragonfly
        options: --ulimit "memlock=-1"
        env:
          DFLY_version_check: false
          DFLY_tcp_backlog: 2048
          DFLY_cluster_mode: emulated
          DFLY_lock_on_hashtags: true
          DFLY_pipeline_squash: 0
          DFLY_multi_exec_squash: false
          DFLY_conn_io_threads: 4
          DFLY_epoll_file_threads: 4
          DFLY_proactor_threads: 4
        ports:
          - 56312:6379

    steps:
      - uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
          submodules: true
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4.0.4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
      - run: corepack enable
      - run: pnpm i --frozen-lockfile
      - name: Check pnpm-lock.yaml
        run: git diff --exit-code pnpm-lock.yaml
      - name: Copy Configure
        run: cp .github/misskey/test.yml .config
      - name: Build
        run: pnpm build
      - name: Test
        run: pnpm --filter backend test-and-coverage:e2e
      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./packages/backend/coverage/coverage-final.json
